{"title":"webpack插件篇：CommonsChunkPlugin详解","slug":"webpack插件篇：CommonsChunkPlugin详解","updated":1487555674111,"link":"","permalink":"http://www.fedjs.com/2017/02/webpack插件篇：CommonsChunkPlugin详解/","path":"2017/02/webpack插件篇：CommonsChunkPlugin详解/","photos":[],"comments":true,"source":"_posts/webpack插件篇：CommonsChunkPlugin详解.md","published":true,"excerpt":"","content":"<h1 id=\"用途说明\"><a href=\"#用途说明\" class=\"headerlink\" title=\"用途说明\"></a>用途说明</h1><p>CommonsChunkPlugin (公共代码提取插件)</p>\n<p>默认会把所有入口节点的公共代码提取出来生成一个新的 JS 代码文件。</p>\n<h1 id=\"webpack-config-js配置\"><a href=\"#webpack-config-js配置\" class=\"headerlink\" title=\"webpack.config.js配置\"></a>webpack.config.js配置</h1><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">new</span> webpack.optimize.CommonsChunkPlugin(options)</div><div class=\"line\"><span class=\"comment\">//默认会把所有入口节点的公共代码提取出来,生成一个common.js</span></div><div class=\"line\"><span class=\"keyword\">new</span> webpack.optimize.CommonsChunkPlugin(<span class=\"string\">'common.js'</span>)</div></pre></td></tr></table></figure>\n<h1 id=\"案例\"><a href=\"#案例\" class=\"headerlink\" title=\"案例\"></a>案例</h1><h2 id=\"Commons-chunk-for-entries\"><a href=\"#Commons-chunk-for-entries\" class=\"headerlink\" title=\"Commons chunk for entries\"></a>Commons chunk for entries</h2><p>Generate an extra chunk, which contains common modules shared between entry points.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">new</span> CommonsChunkPlugin(&#123;</div><div class=\"line\">  <span class=\"attr\">name</span>: <span class=\"string\">\"commons\"</span>,</div><div class=\"line\">  <span class=\"comment\">// (the commons chunk name)</span></div><div class=\"line\"></div><div class=\"line\">  filename: <span class=\"string\">\"commons.js\"</span>,</div><div class=\"line\">  <span class=\"comment\">// (the filename of the commons chunk)</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\">// minChunks: 3,</span></div><div class=\"line\">  <span class=\"comment\">// (Modules must be shared between 3 entries)</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\">// chunks: [\"pageA\", \"pageB\"],</span></div><div class=\"line\">  <span class=\"comment\">// (Only use these entries)</span></div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<p>You must load the generated chunk before the entry point:<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"commons.js\"</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"utf-8\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"entry.bundle.js\"</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"utf-8\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<h2 id=\"Explicit-vendor-chunk\"><a href=\"#Explicit-vendor-chunk\" class=\"headerlink\" title=\"Explicit vendor chunk\"></a>Explicit vendor chunk</h2><p>Split your code into vendor and application.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">entry: &#123;</div><div class=\"line\">  vendor: [&quot;jquery&quot;, &quot;other-lib&quot;],</div><div class=\"line\">  app: &quot;./entry&quot;</div><div class=\"line\">&#125;,</div><div class=\"line\">new CommonsChunkPlugin(&#123;</div><div class=\"line\">  name: &quot;vendor&quot;,</div><div class=\"line\"></div><div class=\"line\">  // filename: &quot;vendor.js&quot;</div><div class=\"line\">  // (Give the chunk a different name)</div><div class=\"line\"></div><div class=\"line\">  minChunks: Infinity,</div><div class=\"line\">  // (with more entries, this ensures that no other module</div><div class=\"line\">  //  goes into the vendor chunk)</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<p>Hint: In combination with long term caching you may need to use <a href=\"https://github.com/diurnalist/chunk-manifest-webpack-plugin\" target=\"_blank\" rel=\"external\">this plugin</a> to avoid that the vendor chunk changes. You should also use records to ensure stable module ids.<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"vendor.js\"</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"utf-8\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"app.js\"</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"utf-8\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<h2 id=\"Move-common-modules-into-the-parent-chunk\"><a href=\"#Move-common-modules-into-the-parent-chunk\" class=\"headerlink\" title=\"Move common modules into the parent chunk\"></a>Move common modules into the parent chunk</h2><p>With Code Splitting multiple child chunks of a chunk can have common modules. You can move these common modules into the parent (This reduces overall size, but has a negative effect on the initial load time. It can be useful if it is expected that a user need to download many sibling chunks).</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">new</span> CommonsChunkPlugin(&#123;</div><div class=\"line\">  <span class=\"comment\">// names: [\"app\", \"subPageA\"]</span></div><div class=\"line\">  <span class=\"comment\">// (choose the chunks, or omit for all chunks)</span></div><div class=\"line\"></div><div class=\"line\">  children: <span class=\"literal\">true</span>,</div><div class=\"line\">  <span class=\"comment\">// (select all children of chosen chunks)</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\">// minChunks: 3,</span></div><div class=\"line\">  <span class=\"comment\">// (3 children must share the module before it's moved)</span></div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<h2 id=\"Extra-async-commons-chunk\"><a href=\"#Extra-async-commons-chunk\" class=\"headerlink\" title=\"Extra async commons chunk\"></a>Extra async commons chunk</h2><p>Similar to 3., but instead of moving common modules into the parent (which increases initial load time) a new async-loaded additional commons chunk is used. This is automatically downloaded in parallel when the additional chunk is downloaded.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">new</span> CommonsChunkPlugin(&#123;</div><div class=\"line\">  <span class=\"comment\">// names: [\"app\", \"subPageA\"]</span></div><div class=\"line\">  <span class=\"comment\">// (choose the chunks, or omit for all chunks)</span></div><div class=\"line\"></div><div class=\"line\">  children: <span class=\"literal\">true</span>,</div><div class=\"line\">  <span class=\"comment\">// (use all children of the chunk)</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">async</span>: <span class=\"literal\">true</span>,</div><div class=\"line\">  <span class=\"comment\">// (create an async commons chunk)</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\">// minChunks: 3,</span></div><div class=\"line\">  <span class=\"comment\">// (3 children must share the module before it's separated)</span></div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<p>## </p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"></div></pre></td></tr></table></figure>","prev":{"title":"webpack插件篇：Config配置类插件有哪些？","slug":"webpack插件篇：Config配置类插件有哪些","updated":1487320343415,"link":"","permalink":"http://www.fedjs.com/2017/02/webpack插件篇：Config配置类插件有哪些/","path":"2017/02/webpack插件篇：Config配置类插件有哪些/","photos":[],"comments":true,"source":"_posts/webpack插件篇：Config配置类插件有哪些.md","published":true},"next":{"title":"webpack 用法指南","slug":"webpack-用法指南","updated":1487297224419,"link":"","permalink":"http://www.fedjs.com/2017/02/webpack-用法指南/","path":"2017/02/webpack-用法指南/","photos":[],"comments":true,"source":"_posts/webpack-用法指南.md","published":true},"categories":[{"name":"webpack","slug":"webpack","path":"categories/webpack/","permalink":"http://www.fedjs.com/categories/webpack/","length":59}],"tags":[]}