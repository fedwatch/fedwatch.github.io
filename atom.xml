<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>浮声新志</title>
  <subtitle>山峰永不相遇，而人人却处处相逢。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.fedjs.com/"/>
  <updated>2017-02-17T02:12:53.821Z</updated>
  <id>http://www.fedjs.com/</id>
  
  <author>
    <name>蒋万万</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>webpack插件篇：Module Styles模块类型插件有哪些？</title>
    <link href="http://www.fedjs.com/2017/02/webpack%E6%8F%92%E4%BB%B6%E7%AF%87%EF%BC%9AModule-Styles%E6%A8%A1%E5%9D%97%E7%B1%BB%E5%9E%8B%E6%8F%92%E4%BB%B6%E6%9C%89%E5%93%AA%E4%BA%9B/"/>
    <id>http://www.fedjs.com/2017/02/webpack插件篇：Module-Styles模块类型插件有哪些/</id>
    <published>2017-02-17T02:12:48.000Z</published>
    <updated>2017-02-17T02:12:53.821Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>webpack插件篇：Optimize优化类插件有哪些？</title>
    <link href="http://www.fedjs.com/2017/02/webpack%E6%8F%92%E4%BB%B6%E7%AF%87%EF%BC%9AOptimize%E4%BC%98%E5%8C%96%E7%B1%BB%E6%8F%92%E4%BB%B6%E6%9C%89%E5%93%AA%E4%BA%9B/"/>
    <id>http://www.fedjs.com/2017/02/webpack插件篇：Optimize优化类插件有哪些/</id>
    <published>2017-02-17T02:11:45.000Z</published>
    <updated>2017-02-17T02:11:53.505Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>webpack插件篇：Output输出类插件有哪些？</title>
    <link href="http://www.fedjs.com/2017/02/webpack%E6%8F%92%E4%BB%B6%E7%AF%87%EF%BC%9AOutput%E8%BE%93%E5%87%BA%E7%B1%BB%E6%8F%92%E4%BB%B6%E6%9C%89%E5%93%AA%E4%BA%9B/"/>
    <id>http://www.fedjs.com/2017/02/webpack插件篇：Output输出类插件有哪些/</id>
    <published>2017-02-17T02:08:41.000Z</published>
    <updated>2017-02-17T02:08:41.137Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>webpack插件篇：Config配置类插件有哪些？</title>
    <link href="http://www.fedjs.com/2017/02/webpack%E6%8F%92%E4%BB%B6%E7%AF%87%EF%BC%9AConfig%E9%85%8D%E7%BD%AE%E7%B1%BB%E6%8F%92%E4%BB%B6%E6%9C%89%E5%93%AA%E4%BA%9B/"/>
    <id>http://www.fedjs.com/2017/02/webpack插件篇：Config配置类插件有哪些/</id>
    <published>2017-02-17T02:08:03.000Z</published>
    <updated>2017-02-17T02:08:03.255Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>webpack插件篇：CommonsChunkPlugin详解</title>
    <link href="http://www.fedjs.com/2017/02/webpack%E6%8F%92%E4%BB%B6%E7%AF%87%EF%BC%9ACommonsChunkPlugin%E8%AF%A6%E8%A7%A3/"/>
    <id>http://www.fedjs.com/2017/02/webpack插件篇：CommonsChunkPlugin详解/</id>
    <published>2017-02-17T01:49:53.000Z</published>
    <updated>2017-02-17T01:49:53.997Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>webpack 用法指南</title>
    <link href="http://www.fedjs.com/2017/02/webpack-%E7%94%A8%E6%B3%95%E6%8C%87%E5%8D%97/"/>
    <id>http://www.fedjs.com/2017/02/webpack-用法指南/</id>
    <published>2017-02-17T01:39:12.000Z</published>
    <updated>2017-02-17T02:07:04.419Z</updated>
    
    <content type="html"><![CDATA[<h1 id="What-is-Webpack"><a href="#What-is-Webpack" class="headerlink" title="What is Webpack"></a>What is Webpack</h1><p>module bundler</p>
<p>module with dependencies</p>
<p>module generates static assets</p>
<h1 id="Why-Webpack"><a href="#Why-Webpack" class="headerlink" title="Why Webpack"></a>Why Webpack</h1><p>good for development but also the user experience</p>
<p>loaded on demand</p>
<p>cache friendly</p>
<p>webpack plugins can be injected into into the build process</p>
<h1 id="首次使用Webpack-用CLI-即Command-Line-Interface"><a href="#首次使用Webpack-用CLI-即Command-Line-Interface" class="headerlink" title="首次使用Webpack, 用CLI, 即Command Line Interface"></a>首次使用Webpack, 用CLI, 即Command Line Interface</h1><p>→ 确认是否安装了NodeJS<br>npm -v<br>→ 安装 Webpack<br>npm install webpack -g<br>→ 创建一个简单的网站<br>…..webpacktest/<br>……….app.js<br>……….index.html<br>→ 导航到webpacktest所在文件夹<br>→ 对app.js文件使用webpack<br>webpack ./app.js bundle.js<br>→ 我们看到在webpacktest目录下多了一个bundle.js文件<br>→ 现在，可以在index.html中引用bundle.js文件，而不是app.js文件</p>
<h1 id="在项目中添加配置文件"><a href="#在项目中添加配置文件" class="headerlink" title="在项目中添加配置文件"></a>在项目中添加配置文件</h1><p>→ 在项目根目录下创建名称为webpack.config.js文件<br>当设置好webpack.config.js文件后，每次我们导航到项目，只要使用webpack这一个命令就可以使用各项功能了。<br>module.exports = {<br>entry: “./app.js”,<br>output: {<br>filename: “bundle.js”<br>}<br>}<br>→ 命令行来到需要Webpack的网站下<br>→ 直接输入webpack命令<br>webpack</p>
<h1 id="启用Webpack观察者模式"><a href="#启用Webpack观察者模式" class="headerlink" title="启用Webpack观察者模式"></a>启用Webpack观察者模式</h1><p>当webpack.config.js的配置发生变化，如果每次都要手动输入webpack命令来生成js文件的话，显得相对麻烦一些。Webpack为我们提供了观察者模式，启用后，任何的webpack.config.js中的变化将接受观察，自动生成最终的js文件。</p>
<p>→ 命令行来到需要Webpack的网站下<br>→ 启用观察者模式<br>webpack –watch<br>→ 在webpack.config.js中添加watch字段，并设置成true<br>module.exports = {<br>entry: “./app.js”,<br>output: {<br>filename: “bundle.js”<br>},<br>watch: true<br>}<br>→ 这样，每次修改保存webpack.config.js中引用文件，bundle.js的文件会自动更新。</p>
<h1 id="安装启用Webpack-DevServer"><a href="#安装启用Webpack-DevServer" class="headerlink" title="安装启用Webpack DevServer"></a>安装启用Webpack DevServer</h1><ol>
<li>导航到目标网站目录</li>
<li>输入npm命令安装Webpack DevServer<br>npm install webpack-dev-server -g</li>
<li>输入webpack-dev-server命令<br>webpack-dev-server</li>
<li><p>看到大致如下内容</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">http://localhost:8080/webpack-dev-server</div><div class="line">webpack result is served from /</div><div class="line">cotent is served from D:\...</div><div class="line">Hash:...</div><div class="line">Version:webpack1.12.4</div><div class="line">Time:94ms</div><div class="line">...</div><div class="line">webpack: bundle is now VALID.</div></pre></td></tr></table></figure>
</li>
<li><p>在浏览器中输入：<a href="http://localhost:8080/webpack-dev-server/" target="_blank" rel="external">http://localhost:8080/webpack-dev-server/</a><br>同时显示app.js文件中console.log和document.write的内容。</p>
</li>
<li>修改webpack.config.js中依赖的文件并保存，浏览器中的内容就会自动更新</li>
<li>如果不想显示console.log内容呢？</li>
<li>在浏览器中输入：<a href="http://localhost:8080/" target="_blank" rel="external">http://localhost:8080/</a></li>
<li>此时，再修改webpack.config.js中依赖的文件并保存，浏览器的内容却不会更新？</li>
<li>再次回到命令行，加入一个inline的flag<br>webpack-dev-server –inline</li>
<li>此时，如果修改webpack.config.js中依赖的文件并保存，浏览器中的内容就会自动更新了☺</li>
</ol>
<h1 id="Bundling多个文件"><a href="#Bundling多个文件" class="headerlink" title="Bundling多个文件"></a>Bundling多个文件</h1><p>→ 在项目下再添加一个login.js文件<br>console.log(‘login loaded’);<br>→ app.js中引用login.js文件<br>require(‘./login’);<br>document.write(“Welcome to Big Hair Concerts!!Baby”);<br>console.log(‘App loaded’);<br>→ 在浏览器中输入：<a href="http://localhost:8080/" target="_blank" rel="external">http://localhost:8080/</a><br>可以看到变化。<br>→ 在项目下再添加一个utils.js文件<br>console.log(‘logging from the utils.js file…’);<br>→ 来到webpack.config.js下配置如下：<br>module.exports = {<br>entry: [“./utils”,”./app.js”],<br>output: {<br>filename: “bundle.js”<br>},<br>watch: true<br>}<br>→ 命令行导航到当前项目下<br>→ 重新启用Webpack DevServer<br>webpack-dev-server<br>→ 在<a href="http://localhost:8080/中体现了相应的变化" target="_blank" rel="external">http://localhost:8080/中体现了相应的变化</a></p>
<h1 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h1><p>→ 创建一个名称为demo的文件夹<br>→ 命令行导航到demo文件夹<br>→ 创建package.json文件<br>npm init<br>然后在命令窗口输入各种信息或直接按Enter键确认，直至最终在demo下创建了package.json文件。<br><figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line"><span class="attr">"name"</span>: <span class="string">"demo"</span>,</div><div class="line"><span class="attr">"version"</span>: <span class="string">"1.0.0"</span>,</div><div class="line"><span class="attr">"description"</span>: <span class="string">"some description about demo"</span>,</div><div class="line"><span class="attr">"main"</span>: <span class="string">"index.js"</span>,</div><div class="line"><span class="attr">"scripts"</span>: &#123;</div><div class="line"><span class="attr">"test"</span>: <span class="string">"echo \"Error: no test specified\" &amp;&amp; exit 1"</span></div><div class="line">&#125;,</div><div class="line"><span class="attr">"author"</span>: <span class="string">"Darren"</span>,</div><div class="line"><span class="attr">"license"</span>: <span class="string">"ISC"</span></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>→ 为当前demo项目创建webpack<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm intall webpack --save-dev</div></pre></td></tr></table></figure></p>
<p>运行成功后</p>
<blockquote>
<p>在demo文件夹下多了node_modules文件夹</p>
<p>在package.json中多了有关webpack的配置</p>
</blockquote>
<figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  <span class="attr">"name"</span>: <span class="string">"demo"</span>,</div><div class="line">  <span class="attr">"version"</span>: <span class="string">"1.0.0"</span>,</div><div class="line">  <span class="attr">"description"</span>: <span class="string">"some description about demo"</span>,</div><div class="line">  <span class="attr">"main"</span>: <span class="string">"index.js"</span>,</div><div class="line">  <span class="attr">"scripts"</span>: &#123;</div><div class="line">    <span class="attr">"test"</span>: <span class="string">"echo \"Error: no test specified\" &amp;&amp; exit 1"</span></div><div class="line">  &#125;,</div><div class="line">  <span class="attr">"author"</span>: <span class="string">"Darren"</span>,</div><div class="line">  <span class="attr">"license"</span>: <span class="string">"ISC"</span>,</div><div class="line">  <span class="attr">"devDependencies"</span>: &#123;</div><div class="line">    <span class="attr">"webpack"</span>: <span class="string">"^1.12.5"</span></div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>现在，就可以在当前的demo项目下，在命令行窗口中运用各种命令了。</p>
<p>→ 输入如下命令查看webpack的命令语法<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ webpack -h</div></pre></td></tr></table></figure></p>
<p>→ 在demo下创建webpack.config.js文件<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">module</span>.exports = &#123;</div><div class="line">    <span class="attr">entry</span>: <span class="string">'./main.js'</span>,</div><div class="line">    <span class="attr">output</span>: &#123;</div><div class="line">    <span class="attr">filename</span>: <span class="string">'bundle.js'</span> </div><div class="line">    &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure></p>
<p>→ 在demo下创建main.js<br>document.write(“Webpack for the win!”);<br>→ 在demo下运行webpack命令<br>webpack<br>运行成功，在demo下多了一个bundle.js文件。<br>→ 在demo下添加index.html</p>
<p><html></html></p>
<p><head></head></p>
<p><script type="text/javascript" src="bundle.js"></script><br></p>
<p><body></body></p>
<p></p><h1>Webpack Demo</h1><br><br><br>→ 在demo下创建second.js<br>module.exports = document.write(“Oh yeah another file”);<br>→ 在main.js中引用second.js文件<br>require(‘./second.js’);<br>document.write(“Webpack for the win!”);<br>→ 在当前demo项目下使用webpack命令<br>webpack<br>发现second.js文件已被引用到bundle.js文件中了。<br>→ 在当前demo项目下使用webpack -p命令<br>webpack -p<br>这样，bundle.js文件的内容呈压缩状态。<br>→ 为当前项目添加loader<br>各种loader在这里：<a href="http://webpack.github.io/docs/list-of-loaders.html" target="_blank" rel="external">http://webpack.github.io/docs/list-of-loaders.html</a><br>比如添加一个CoffeeScript loader<br>npm install coffee-loader –save-dev<br>运行成功后。<br>● 在node_modules文件夹下多了一个coffee-loader子文件夹。<br>● 在package.json中多了与coffee-loader相关的配置<br>{<br>“name”: “demo”,<br>“version”: “1.0.0”,<br>“description”: “some description about demo”,<br>“main”: “index.js”,<br>“scripts”: {<br>“test”: “echo \”Error: no test specified\” &amp;&amp; exit 1”<br>},<br>“author”: “Darren”,<br>“license”: “ISC”,<br>“devDependencies”: {<br>“coffee-loader”: “^0.7.2”,<br>“coffee-script”: “^1.10.0”,<br>“webpack”: “^1.12.5”<br>}<br>}<br>● 在webpack.config.js中添加coffee-loader相关<br>module.exports = {<br>entry: ‘./main.js’,<br>output: {<br>filename: ‘bundle.js’<br>},<br>module: {<br>loaders: [<br>{ test: /.coffee$/, loader: “coffee-loader” }<br>]<br>}<br>};<br>在demo下添加third.coffee文件。<br>alert “webpack is boss!”<br>在main.js中引用third.coffee文件。<br>require(‘./second.js’);<br>require(“./third.coffee”);<br>document.write(“Webpack for the win!”);<br>运行webpack命令，在bundle.js中多了与third.coffee文件相关的内容。<br>→ 添加CSS和图片<br>命令行导航到demo文件夹下，运行如下：<br>npm install style-loader css-loader url-loader –save-dev<br>运行成功后，在node_modules中多了css-loader, style-loader,在package.json中也多了相关配置：<br>{<br>“name”: “demo”,<br>“version”: “1.0.0”,<br>“description”: “some description about demo”,<br>“main”: “index.js”,<br>“scripts”: {<br>“test”: “echo \”Error: no test specified\” &amp;&amp; exit 1”<br>},<br>“author”: “Darren”,<br>“license”: “ISC”,<br>“devDependencies”: {<br>“coffee-loader”: “^0.7.2”,<br>“coffee-script”: “^1.10.0”,<br>“css-loader”: “^0.22.0”,<br>“style-loader”: “^0.13.0”,<br>“webpack”: “^1.12.5”<br>}<br>}<br>在webpack.config.js中添加如下配置：<p></p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">module</span>.exports = &#123;</div><div class="line">    <span class="attr">entry</span>: <span class="string">'./main.js'</span>,</div><div class="line">    <span class="attr">output</span>: &#123;</div><div class="line">        <span class="attr">path</span>: <span class="string">'./build'</span>, <span class="comment">// This is where images AND js will go</span></div><div class="line">        publicPath: <span class="string">'http://yoururl.com/'</span>, <span class="comment">// This is used to generate URLs</span></div><div class="line">        filename: <span class="string">'bundle.js'</span></div><div class="line">    &#125;,</div><div class="line">    <span class="attr">module</span>: &#123;</div><div class="line">        <span class="attr">loaders</span>: [</div><div class="line">            &#123;<span class="attr">test</span>: <span class="regexp">/\.coffee$/</span>, <span class="attr">loader</span>: <span class="string">"coffee-loader"</span>&#125;, </div><div class="line">            &#123;<span class="attr">test</span>: <span class="regexp">/\.css$/</span>, <span class="attr">loader</span>: <span class="string">'style-loader!css-loader'</span>&#125;,</div><div class="line">            &#123;<span class="attr">test</span>: <span class="regexp">/\.(png|jpg)$/</span>, <span class="attr">loader</span>: <span class="string">'url-loader?limit=8192'</span>&#125;</div><div class="line">        ]</div><div class="line">    &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<p>注意，在output中，把build用来存放生成的bundle.js和图片文件。publicPath用来存放网站地址。<br>修改index.html文件中的引用路径。</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"./build/bundle.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Webpack Demo<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<p>在demo下添加image.coffee文件。<br><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">img1 = <span class="built_in">document</span>.createElement(<span class="string">"img"</span>)</div><div class="line">img1.src = <span class="built_in">require</span>(<span class="string">"./your-small-image.png"</span>)</div><div class="line"><span class="built_in">document</span>.body.appendChild img1</div><div class="line">img2 = <span class="built_in">document</span>.createElement(<span class="string">"img"</span>)</div><div class="line">img2.src = <span class="built_in">require</span>(<span class="string">"./your-big-image.png"</span>)</div><div class="line"><span class="built_in">document</span>.body.appendChild img2</div></pre></td></tr></table></figure></p>
<p>在main.js中添加</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">require</span>(<span class="string">"./image.coffee"</span>)</div><div class="line"><span class="built_in">require</span>(<span class="string">'./second.js'</span>);</div><div class="line"><span class="built_in">require</span>(<span class="string">"./third.coffee"</span>);</div><div class="line"><span class="built_in">require</span>(<span class="string">"./image.coffee"</span>);</div><div class="line"><span class="built_in">document</span>.write(<span class="string">"Webpack for the win!"</span>);</div></pre></td></tr></table></figure>
<p>在demo下创建styles.css文件。<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">body</span> &#123;</div><div class="line"><span class="attribute">background</span>: tomato;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>在main.js中添加</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">require</span>(<span class="string">"./styles.css"</span>)</div><div class="line"><span class="built_in">require</span>(<span class="string">'./second.js'</span>);</div><div class="line"><span class="built_in">require</span>(<span class="string">"./third.coffee"</span>);</div><div class="line"><span class="built_in">require</span>(<span class="string">"./image.coffee"</span>);</div><div class="line"><span class="built_in">require</span>(<span class="string">"./styles.css"</span>)</div><div class="line"><span class="built_in">document</span>.write(<span class="string">"Webpack for the win!"</span>);</div></pre></td></tr></table></figure>
<p>运行webpack命令。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;What-is-Webpack&quot;&gt;&lt;a href=&quot;#What-is-Webpack&quot; class=&quot;headerlink&quot; title=&quot;What is Webpack&quot;&gt;&lt;/a&gt;What is Webpack&lt;/h1&gt;&lt;p&gt;module bundler&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>webpack插件篇：autoprefixer详解</title>
    <link href="http://www.fedjs.com/2017/02/webpack%E6%8F%92%E4%BB%B6%E7%AF%87%EF%BC%9Aautoprefixer%E8%AF%A6%E8%A7%A3/"/>
    <id>http://www.fedjs.com/2017/02/webpack插件篇：autoprefixer详解/</id>
    <published>2017-02-17T01:08:04.000Z</published>
    <updated>2017-02-17T01:08:45.386Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="webpack" scheme="http://www.fedjs.com/categories/webpack/"/>
    
    
  </entry>
  
  <entry>
    <title>阿里云 合租计划 0217</title>
    <link href="http://www.fedjs.com/2017/02/%E9%98%BF%E9%87%8C%E4%BA%91-%E5%90%88%E7%A7%9F%E8%AE%A1%E5%88%92-0217/"/>
    <id>http://www.fedjs.com/2017/02/阿里云-合租计划-0217/</id>
    <published>2017-02-17T01:03:07.000Z</published>
    <updated>2017-02-17T02:13:23.172Z</updated>
    
    <content type="html"><![CDATA[<h1 id="为什么要合租"><a href="#为什么要合租" class="headerlink" title="为什么要合租"></a>为什么要合租</h1><blockquote>
<p>合租是最好的选择，可以让你的遇到一路前行的人。分享、收获都是进步的一部分。 –刘素欣</p>
</blockquote>
<h1 id="合租计划展示"><a href="#合租计划展示" class="headerlink" title="合租计划展示"></a>合租计划展示</h1><table>
<thead>
<tr>
<th>2017.02</th>
<th>租约名称</th>
<th>服务器配置</th>
<th>联系人</th>
<th></th>
<th></th>
<th></th>
<th></th>
<th></th>
<th style="text-align:right"></th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td style="text-align:right"></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td style="text-align:right"></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td style="text-align:right"></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td style="text-align:right"></td>
</tr>
<tr>
<td>2017.01</td>
<td>租约名称</td>
<td>服务器配置</td>
<td>联系人</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td style="text-align:right"></td>
</tr>
<tr>
<td>—</td>
<td>—</td>
<td>—</td>
<td>—</td>
<td>—</td>
<td>—</td>
<td>—</td>
<td>—</td>
<td>—</td>
<td style="text-align:right">–:</td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td style="text-align:right"></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td style="text-align:right"></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td style="text-align:right"></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td style="text-align:right"></td>
</tr>
<tr>
<td>2016.12</td>
<td>租约名称</td>
<td>服务器配置</td>
<td>联系人</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td style="text-align:right"></td>
</tr>
<tr>
<td>—</td>
<td>—</td>
<td>—</td>
<td>—</td>
<td>—</td>
<td>—</td>
<td>—</td>
<td>—</td>
<td>—</td>
<td style="text-align:right">–:</td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td style="text-align:right"></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td style="text-align:right"></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td style="text-align:right"></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
<blockquote>
<p>如有需要发布合租计划可以直接在本站的评论区直接留言</p>
</blockquote>
<h1 id="竞争力价格"><a href="#竞争力价格" class="headerlink" title="竞争力价格"></a>竞争力价格</h1><h1 id="联系发起人"><a href="#联系发起人" class="headerlink" title="联系发起人"></a>联系发起人</h1><h1 id="财务透明"><a href="#财务透明" class="headerlink" title="财务透明"></a>财务透明</h1><blockquote>
<p>注意： 合租者的个人支付信息，平台不对外公布</p>
</blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;为什么要合租&quot;&gt;&lt;a href=&quot;#为什么要合租&quot; class=&quot;headerlink&quot; title=&quot;为什么要合租&quot;&gt;&lt;/a&gt;为什么要合租&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;合租是最好的选择，可以让你的遇到一路前行的人。分享、收获都是进步的一部分。 –刘素
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>webpack.config.js (一)</title>
    <link href="http://www.fedjs.com/2017/02/webpack-config-js-one/"/>
    <id>http://www.fedjs.com/2017/02/webpack-config-js-one/</id>
    <published>2017-02-16T09:35:49.000Z</published>
    <updated>2017-02-17T01:00:41.072Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Webpack配置文件的重要性"><a href="#Webpack配置文件的重要性" class="headerlink" title="Webpack配置文件的重要性"></a>Webpack配置文件的重要性</h1><h1 id="Webpack-vs-Browserify"><a href="#Webpack-vs-Browserify" class="headerlink" title="Webpack vs Browserify"></a>Webpack vs Browserify</h1><h1 id="技巧"><a href="#技巧" class="headerlink" title="技巧"></a>技巧</h1>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Webpack配置文件的重要性&quot;&gt;&lt;a href=&quot;#Webpack配置文件的重要性&quot; class=&quot;headerlink&quot; title=&quot;Webpack配置文件的重要性&quot;&gt;&lt;/a&gt;Webpack配置文件的重要性&lt;/h1&gt;&lt;h1 id=&quot;Webpack-vs-Br
    
    </summary>
    
      <category term="webpack" scheme="http://www.fedjs.com/categories/webpack/"/>
    
    
  </entry>
  
  <entry>
    <title>react-webpack 入门Demo展示</title>
    <link href="http://www.fedjs.com/2017/02/webpack-react-%E5%85%A5%E9%97%A8Demo%E5%B1%95%E7%A4%BA/"/>
    <id>http://www.fedjs.com/2017/02/webpack-react-入门Demo展示/</id>
    <published>2017-02-16T07:54:07.000Z</published>
    <updated>2017-02-16T08:41:36.375Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基本命令配置"><a href="#基本命令配置" class="headerlink" title="基本命令配置"></a>基本命令配置</h1><ol>
<li><p>node环境下npm包的安装依赖 </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">$ mkdir react-demo &amp;&amp; cd react-demo</div><div class="line">$ npm i -S webpack webpack-dev-server \</div><div class="line">html-webpack-plugin webpack-merge \</div><div class="line">babel-loader babel-core css-loader \</div><div class="line">style-loader babel-preset-react-hmre \</div><div class="line">babel-preset-es2015 babel-preset-react -D</div><div class="line"></div><div class="line">$ mkdir app dist assets</div><div class="line">$ vim assets/index.tmpl.html</div></pre></td></tr></table></figure>
</li>
<li><p>编写 index.tmpl.html</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=utf-8"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;<span class="name">%=</span> <span class="attr">htmlWebpackPlugin.options.title</span> %&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"root"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
<li><p>配置你的 package.json 参数</p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="attr">"script"</span>:&#123;</div><div class="line">        <span class="attr">"build"</span>:<span class="string">"webpack ."</span>,</div><div class="line">        <span class="attr">"start"</span>:<span class="string">"webpack-dev-server ."</span></div><div class="line">    &#125;,</div><div class="line">    <span class="attr">"babel"</span>:&#123;</div><div class="line">      <span class="attr">"presets"</span>:[</div><div class="line">        <span class="string">"es2015"</span>,<span class="string">"react"</span></div><div class="line">      ],</div><div class="line">      <span class="attr">"env"</span>:&#123;</div><div class="line">        <span class="attr">"start"</span>:&#123;</div><div class="line">          <span class="attr">"presets"</span>:[</div><div class="line">              <span class="string">"react-hmre"</span></div><div class="line">          ]</div><div class="line">        &#125;</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>新建 webpack.config.js 文件，来初始化webpack设置</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</div><div class="line"><span class="keyword">const</span> HtmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">'html-webpack-plugin'</span>);</div><div class="line"><span class="keyword">const</span> webpack = <span class="built_in">require</span>(<span class="string">'webpack'</span>);</div><div class="line"><span class="keyword">const</span> merge = <span class="built_in">require</span>(<span class="string">'webpack-merge'</span>);</div><div class="line"><span class="keyword">const</span> TAGET = process.env.npm_lifecycle_event;</div><div class="line">process.env.BABEL_ENV = TAGET;</div><div class="line"><span class="keyword">const</span> PATHS = &#123;</div><div class="line">    <span class="attr">app</span>: path.join(__dirname,<span class="string">'app'</span>),</div><div class="line">    <span class="attr">build</span>: path.join(__dirname,<span class="string">'dist'</span>),</div><div class="line">    <span class="attr">template</span>: path.join(__dirname,<span class="string">'assets'</span>,<span class="string">'index.tmpl.html'</span>)</div><div class="line">&#125;;</div><div class="line"><span class="keyword">const</span> common = &#123;</div><div class="line">    <span class="attr">entry</span>:&#123;</div><div class="line">        <span class="attr">app</span>:PATHS.app</div><div class="line">    &#125;,</div><div class="line">    <span class="attr">output</span>:&#123;</div><div class="line">        <span class="attr">path</span>:PATHS.build,</div><div class="line">        <span class="attr">filename</span>:<span class="string">'bundle.js'</span></div><div class="line">    &#125;,</div><div class="line">    <span class="attr">plugins</span>:[</div><div class="line">        <span class="keyword">new</span> HtmlWebpackPlugin(&#123;</div><div class="line">            <span class="attr">title</span>: <span class="string">'react demo'</span>,</div><div class="line">            <span class="attr">template</span>: PATHS.template,</div><div class="line">            <span class="attr">inject</span>: <span class="string">'body'</span></div><div class="line">        &#125;)</div><div class="line">    ],</div><div class="line">    <span class="attr">module</span>:&#123;</div><div class="line">     <span class="attr">loaders</span>: [</div><div class="line">         &#123;</div><div class="line">          <span class="attr">test</span>: <span class="regexp">/\.jsx?$/</span>,</div><div class="line">          <span class="attr">loaders</span>: [<span class="string">'babel?cacheDirectory'</span>],</div><div class="line">          <span class="attr">include</span>: PATHS.app,</div><div class="line">        &#125;, &#123;</div><div class="line">          <span class="attr">test</span>: <span class="regexp">/\.css$/</span>,</div><div class="line">          <span class="attr">loaders</span>: [<span class="string">'style'</span>, <span class="string">'css'</span>],</div><div class="line">          <span class="attr">include</span>: PATHS.app,</div><div class="line">        &#125;</div><div class="line">     ],</div><div class="line">    &#125;,</div><div class="line">    <span class="attr">resolve</span>:&#123;</div><div class="line">        <span class="attr">extensions</span>:[<span class="string">''</span>,<span class="string">'js'</span>,<span class="string">'jsx'</span>]</div><div class="line">    &#125;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="keyword">if</span>(TAGET === <span class="string">'start'</span> || ! TAGET) &#123;</div><div class="line">    <span class="built_in">module</span>.exports = merge(common,&#123;</div><div class="line">        <span class="attr">devtool</span>:<span class="string">'eval-source-map'</span>,</div><div class="line">        <span class="attr">devServer</span>:&#123;</div><div class="line">            <span class="attr">contentBase</span>:<span class="string">'/dist'</span>,</div><div class="line">            <span class="attr">historyApiFallback</span>: <span class="literal">true</span>,</div><div class="line">            <span class="attr">hot</span>:<span class="literal">true</span>,</div><div class="line">            <span class="attr">inline</span>:<span class="literal">true</span>,</div><div class="line">            <span class="attr">progress</span>:<span class="literal">true</span>,</div><div class="line">            <span class="attr">stats</span>:<span class="string">'errors-only'</span></div><div class="line">        &#125;,</div><div class="line">        <span class="attr">plugins</span>:[</div><div class="line">            <span class="keyword">new</span> webpack.HotModuleRepleacementPlugin(),</div><div class="line">        ]</div><div class="line">    &#125;);</div><div class="line">&#125;</div><div class="line"><span class="keyword">if</span>(TAGET === <span class="string">'start'</span> || ! TAGET) &#123;</div><div class="line">    <span class="built_in">module</span>.exports = merge(common,&#123;&#125;);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ol>
<h1 id="App-jsx文件编写"><a href="#App-jsx文件编写" class="headerlink" title="App.jsx文件编写"></a>App.jsx文件编写</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> React,&#123; Component &#125; <span class="keyword">from</span> <span class="string">'react'</span></div><div class="line"><span class="keyword">import</span> &#123;</div><div class="line">    Router,</div><div class="line">    Route,</div><div class="line">    Link,</div><div class="line">    IndexLink,</div><div class="line">    IndexRoute,</div><div class="line">    hashHistory,</div><div class="line">&#125; <span class="keyword">from</span> <span class="string">'react-router'</span>;</div><div class="line"></div><div class="line"><span class="keyword">const</span> activeStyle = &#123;</div><div class="line">  <span class="attr">color</span>: <span class="string">'#53acff'</span>,</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="keyword">const</span> Nav = <span class="function"><span class="params">()</span> =&gt;</span> (</div><div class="line">    <span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></div><div class="line">    <span class="tag">&lt;<span class="name">IndexLink</span> <span class="attr">onlyActiveOnIndex</span> <span class="attr">activeStyle</span>=<span class="string">&#123;activeStyle&#125;</span> <span class="attr">to</span>=<span class="string">"/"</span>&gt;</span>主页<span class="tag">&lt;/<span class="name">IndexLink</span>&gt;</span>          </div><div class="line">    <span class="tag">&lt;<span class="name">IndexLink</span> <span class="attr">onlyActiveOnIndex</span> <span class="attr">activeStyle</span>=<span class="string">&#123;activeStyle&#125;</span> <span class="attr">to</span>=<span class="string">"/address"</span>&gt;</span>地址<span class="tag">&lt;/<span class="name">IndexLink</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">);</div><div class="line"></div><div class="line"><span class="keyword">const</span> Container = <span class="function">(<span class="params">props</span>) =&gt;</span>(</div><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></div><div class="line">    <span class="tag">&lt;<span class="name">Nav</span> /&gt;</span> &#123; props.children &#125;</div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span>);</div><div class="line"></div><div class="line"><span class="keyword">const</span> Twitter = <span class="function"><span class="params">()</span> =&gt;</span> (<span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span>@xiaomingplus twitter<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span>);</div><div class="line"><span class="keyword">const</span> Instagram = <span class="function"><span class="params">()</span> =&gt;</span> (<span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span>@xiaomingplus instagram<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span>);</div><div class="line"></div><div class="line"><span class="keyword">const</span> NotFound = <span class="function"><span class="params">()</span> =&gt;</span> (</div><div class="line">    <span class="xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>404.. 找不到该页面!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></div><div class="line">);</div><div class="line"><span class="keyword">const</span> Home = <span class="function"><span class="params">()</span> =&gt;</span> (</div><div class="line">    <span class="xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>你好，这是主页。<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></div><div class="line">);</div><div class="line"><span class="keyword">const</span> Address = <span class="function">(<span class="params">props</span>) =&gt;</span> (</div><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></div><div class="line">    <span class="tag">&lt;<span class="name">br</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">Link</span> <span class="attr">activeStyle</span>=<span class="string">&#123;&#123;</span> <span class="attr">color:</span> '#<span class="attr">53acff</span>' &#125;&#125; <span class="attr">to</span>=<span class="string">"/address"</span>&gt;</span>这是Twitter<span class="tag">&lt;/<span class="name">Link</span>&gt;</span>  </div><div class="line">    <span class="tag">&lt;<span class="name">Link</span> <span class="attr">to</span>=<span class="string">"/address/instagram"</span>&gt;</span>这是Instagram<span class="tag">&lt;/<span class="name">Link</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>欢迎互关！<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line">    &#123; props.children &#125;</div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">);</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">App</span> <span class="keyword">extends</span> <span class="title">Component</span> </span>&#123;</div><div class="line">  construct() &#123;</div><div class="line">  &#125;</div><div class="line">  render() &#123;</div><div class="line">    <span class="keyword">return</span> (</div><div class="line">        &lt;Router history=&#123;hashHistory&#125;&gt;</div><div class="line">            &lt;Route path="/" component=&#123;Container&#125;&gt;</div><div class="line">                &lt;IndexRoute component=&#123;Home&#125; /&gt;</div><div class="line">                &lt;Route path="/address" component=&#123;Address&#125;&gt;</div><div class="line">                    &lt;IndexRoute component=&#123;Twitter&#125; /&gt;</div><div class="line">                    &lt;Route path="instagram" component=&#123;Instagram&#125; /&gt;</div><div class="line">                &lt;/Route&gt;</div><div class="line">                &lt;Route path="*" component=&#123;NotFound&#125; /&gt;</div><div class="line">            &lt;/Route&gt;</div><div class="line">        &lt;/Router&gt;</div><div class="line">    );</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line">export default App;</div></pre></td></tr></table></figure>
<h1 id="index-jsx文件编写"><a href="#index-jsx文件编写" class="headerlink" title="index.jsx文件编写"></a>index.jsx文件编写</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span>;</div><div class="line"><span class="keyword">import</span> ReactDOM <span class="keyword">from</span> <span class="string">'react-dom'</span>;</div><div class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">'./App.jsx'</span>;</div><div class="line"></div><div class="line">ReactDOM.render(</div><div class="line">    <span class="xml"><span class="tag">&lt;<span class="name">App</span> /&gt;</span>, </span></div><div class="line">    document.getElementById('root')</div><div class="line">);</div></pre></td></tr></table></figure>
<h1 id="本地启动服务器"><a href="#本地启动服务器" class="headerlink" title="本地启动服务器"></a>本地启动服务器</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm start</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;基本命令配置&quot;&gt;&lt;a href=&quot;#基本命令配置&quot; class=&quot;headerlink&quot; title=&quot;基本命令配置&quot;&gt;&lt;/a&gt;基本命令配置&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;node环境下npm包的安装依赖 &lt;/p&gt;
&lt;figure class=&quot;highligh
    
    </summary>
    
      <category term="react" scheme="http://www.fedjs.com/categories/react/"/>
    
    
      <category term="react webpack" scheme="http://www.fedjs.com/tags/react-webpack/"/>
    
  </entry>
  
  <entry>
    <title>webpack入门篇：config参数详解</title>
    <link href="http://www.fedjs.com/2017/02/webpack%E5%85%A5%E9%97%A8%E7%AF%87%EF%BC%9Aconfig%E5%8F%82%E6%95%B0%E8%AF%A6%E8%A7%A3/"/>
    <id>http://www.fedjs.com/2017/02/webpack入门篇：config参数详解/</id>
    <published>2017-02-16T07:15:07.000Z</published>
    <updated>2017-02-16T07:15:32.734Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="webpack" scheme="http://www.fedjs.com/categories/webpack/"/>
    
    
  </entry>
  
  <entry>
    <title>webpack插件篇：20个你必须知道的插件</title>
    <link href="http://www.fedjs.com/2017/02/webpack%E6%8F%92%E4%BB%B6%E7%AF%87%EF%BC%9A20%E4%B8%AA%E4%BD%A0%E5%BF%85%E9%A1%BB%E7%9F%A5%E9%81%93%E7%9A%84%E6%8F%92%E4%BB%B6/"/>
    <id>http://www.fedjs.com/2017/02/webpack插件篇：20个你必须知道的插件/</id>
    <published>2017-02-16T06:29:04.000Z</published>
    <updated>2017-02-16T06:29:21.564Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="webpack" scheme="http://www.fedjs.com/categories/webpack/"/>
    
    
  </entry>
  
  <entry>
    <title>npm使用入门</title>
    <link href="http://www.fedjs.com/2017/02/npm%E4%BD%BF%E7%94%A8%E5%85%A5%E9%97%A8/"/>
    <id>http://www.fedjs.com/2017/02/npm使用入门/</id>
    <published>2017-02-16T06:04:49.000Z</published>
    <updated>2017-02-16T06:05:21.961Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="npm" scheme="http://www.fedjs.com/categories/npm/"/>
    
    
  </entry>
  
  <entry>
    <title>webpack-react-redux-startkit</title>
    <link href="http://www.fedjs.com/2017/02/webpack-react-redux-startkit/"/>
    <id>http://www.fedjs.com/2017/02/webpack-react-redux-startkit/</id>
    <published>2017-02-16T01:21:04.000Z</published>
    <updated>2017-02-16T06:01:13.880Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="webpack" scheme="http://www.fedjs.com/categories/webpack/"/>
    
    
  </entry>
  
  <entry>
    <title>webpack全局加载第三方插件jQuery类库</title>
    <link href="http://www.fedjs.com/2017/02/webpack-jquery/"/>
    <id>http://www.fedjs.com/2017/02/webpack-jquery/</id>
    <published>2017-02-16T01:21:04.000Z</published>
    <updated>2017-02-16T09:34:47.386Z</updated>
    
    <content type="html"><![CDATA[<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>webpack是近期最火的一款模块加载器兼打包工具，它能把各种资源，例如JS（含JSX）、coffee、样式（含less/sass）、图片等都作为模块来使用和处理。</p>
<p>我们可以直接使用 require(XXX) 的形式来引入各模块，即使它们可能需要经过编译（比如JSX和sass），但我们无须在上面花费太多心思，因为 webpack 有着各种健全的加载器（loader）在默默处理这些事情，这块我们后续会提到。</p>
<p>用webpack最大的问题就是不需要再关注依赖顺序了</p>
<p><a href="http://webpack.github.io/" target="_blank" rel="external">【webpack 官网】</a></p>
<p><a href="http://webpack.github.io/docs/" target="_blank" rel="external">【webpack 入门文档】</a></p>
<h1 id="第一种方法（直接引入）："><a href="#第一种方法（直接引入）：" class="headerlink" title="第一种方法（直接引入）："></a>第一种方法（直接引入）：</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> webpack = <span class="built_in">require</span>(<span class="string">'webpack'</span>);</div><div class="line"><span class="comment">// 你要引入jquery并交由webpack打包 只需要这样使用</span></div><div class="line"></div><div class="line"><span class="keyword">var</span> $ = <span class="built_in">require</span>(<span class="string">'jquery'</span>);</div><div class="line"></div><div class="line"><span class="comment">// webpack会自动去node_modules 目录中查找资源</span></div><div class="line"><span class="comment">// console.log("一切就是如此简单愉快！")</span></div></pre></td></tr></table></figure>
<h1 id="第二种方法（webpack插件引入）："><a href="#第二种方法（webpack插件引入）：" class="headerlink" title="第二种方法（webpack插件引入）："></a>第二种方法（webpack插件引入）：</h1><p>主要依靠 webpack 中 ProvidePlugin 来实现。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">module</span>.exports = &#123;</div><div class="line">    <span class="attr">resolve</span>: &#123;</div><div class="line">        <span class="attr">root</span>: [],</div><div class="line">        <span class="attr">alias</span>: &#123;</div><div class="line">            <span class="string">'jquery'</span>: path.resolve(rootDir, <span class="string">'./lib/jquery.min.js'</span>); </div><div class="line">        &#125;</div><div class="line">    &#125;,</div><div class="line">    <span class="attr">plugins</span>: [</div><div class="line">        <span class="keyword">new</span> webpack.ProvidePlugin(&#123;</div><div class="line">            <span class="attr">$</span>: <span class="string">'jquery'</span></div><div class="line">        &#125;),</div><div class="line">    ]</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<h1 id="第三种方法（expose-loader-配置）："><a href="#第三种方法（expose-loader-配置）：" class="headerlink" title="第三种方法（expose-loader 配置）："></a>第三种方法（expose-loader 配置）：</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="attr">test</span>: <span class="built_in">require</span>.resolve(<span class="string">'jquery'</span>),</div><div class="line">    <span class="attr">loader</span>: <span class="string">'expose?jQuery!expose?$'</span></div><div class="line"> &#125;</div></pre></td></tr></table></figure>
<p>引用方式：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> $ <span class="keyword">from</span> <span class="string">'expose?$!jquery'</span></div><div class="line"><span class="keyword">import</span> <span class="string">'jquery-ui'</span> <span class="comment">//插件可用</span></div></pre></td></tr></table></figure></p>
<h1 id="第四种方法（封装jQuery）："><a href="#第四种方法（封装jQuery）：" class="headerlink" title="第四种方法（封装jQuery）："></a>第四种方法（封装jQuery）：</h1><ol>
<li><p>生成 jquery-vendor.js</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> $ = <span class="built_in">require</span>(<span class="string">'jquery'</span>);</div><div class="line"><span class="comment">// es6</span></div><div class="line"><span class="keyword">import</span> $ <span class="keyword">from</span> <span class="string">'jquery'</span>;</div><div class="line"><span class="built_in">window</span>.$ = $;</div><div class="line"><span class="built_in">window</span>.jQuery = $;</div><div class="line">exports <span class="keyword">default</span> $</div></pre></td></tr></table></figure>
</li>
<li><p>类库引用jquery时指向jquery-vendor.js</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> $ <span class="keyword">from</span> <span class="string">'$&#123;webroot&#125;/jquery-vendor.js'</span></div><div class="line"><span class="keyword">import</span> <span class="string">'jquery-ui'</span></div></pre></td></tr></table></figure>
</li>
<li><p>调用方便，可在webpack配置文件中创建jquery-vendor.js的别名</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">alias:&#123;</div><div class="line">    <span class="string">'jquery'</span>:<span class="string">'$&#123;webroot&#125;/jquery-vendor.js'</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ol>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h1&gt;&lt;p&gt;webpack是近期最火的一款模块加载器兼打包工具，它能把各种资源，例如JS（含JSX）、coffee、样式（含less/sass）、图片等
    
    </summary>
    
      <category term="webpack" scheme="http://www.fedjs.com/categories/webpack/"/>
    
    
  </entry>
  
  <entry>
    <title>扫盲:JS模块化开发</title>
    <link href="http://www.fedjs.com/2016/12/talk-about-javascript-module-development/"/>
    <id>http://www.fedjs.com/2016/12/talk-about-javascript-module-development/</id>
    <published>2016-12-23T06:32:21.000Z</published>
    <updated>2017-02-16T06:01:40.988Z</updated>
    
    <content type="html"><![CDATA[<h1 id="什么是模块化开发"><a href="#什么是模块化开发" class="headerlink" title="什么是模块化开发"></a>什么是模块化开发</h1><p>模块化开发（modular development）,</p>
<p>模块化开发可以为我们解决以下问题</p>
<p>其一、恼人的命名冲突：<br>这个确实够烦人，为了解决之，我们动用闭包作用域、我们动用命名空间，再或者… </p>
<p>其二、烦琐的文件依赖：<br>这个问题更不必说，我们做前端支持的，常常要替后端同学们解决这类问题，我们自己也常常忽略这类问题。平常的开发中，我们要对我们的JS文件的加载顺序要小心加小心。一个字——确实烦。</p>
<p>其三、严重依赖文件的加载顺序：<br>当你使用script引入类库和外部脚本的时候肯定会遇到 类库标识未定义的问题等等问题像“$定义不存在、$.xxx() is not function”这样或那样的问题，一般都是类库严重依赖script文件的加载顺序导致的。</p>
<h1 id="模块化开发的规范有哪些？"><a href="#模块化开发的规范有哪些？" class="headerlink" title="模块化开发的规范有哪些？"></a>模块化开发的规范有哪些？</h1><p>CommonJS和AMD、CMD、UMD。</p>
<p>CommonJS代表：</p>
<p>AMD代表： Require.js 、 curl.js</p>
<p>CMD代表： Sea.js</p>
<h1 id="资源介绍："><a href="#资源介绍：" class="headerlink" title="资源介绍："></a>资源介绍：</h1><h3 id="博客资料："><a href="#博客资料：" class="headerlink" title="博客资料："></a>博客资料：</h3><p><a href="http://www.ruanyifeng.com/blog/2012/10/javascript_module.html" target="_blank" rel="external">Javascript模块化编程（一）：模块的写法 - 阮一峰博客</a><br><a href="http://www.ruanyifeng.com/blog/2012/10/asynchronous_module_definition.html" target="_blank" rel="external">Javascript模块化编程（二）：AMD规范 - 阮一峰博客</a><br><a href="http://www.ruanyifeng.com/blog/2012/11/require_js.html" target="_blank" rel="external">Javascript模块化编程（三）：require.js的用法 - 阮一峰博客</a></p>
<h3 id="视频（Video）"><a href="#视频（Video）" class="headerlink" title="视频（Video）"></a>视频（Video）</h3><p><img src="" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;什么是模块化开发&quot;&gt;&lt;a href=&quot;#什么是模块化开发&quot; class=&quot;headerlink&quot; title=&quot;什么是模块化开发&quot;&gt;&lt;/a&gt;什么是模块化开发&lt;/h1&gt;&lt;p&gt;模块化开发（modular development）,&lt;/p&gt;
&lt;p&gt;模块化开发可以为我们解
    
    </summary>
    
      <category term="JS标准指南" scheme="http://www.fedjs.com/categories/JS%E6%A0%87%E5%87%86%E6%8C%87%E5%8D%97/"/>
    
    
  </entry>
  
  <entry>
    <title>关于借贷和裸条的一点思考</title>
    <link href="http://www.fedjs.com/2016/12/sale-yourself-for-money/"/>
    <id>http://www.fedjs.com/2016/12/sale-yourself-for-money/</id>
    <published>2016-12-21T06:05:19.000Z</published>
    <updated>2016-12-21T06:08:26.754Z</updated>
    
    <content type="html"><![CDATA[<p>原文来自于我的“知乎问答” </p>
<p><a href="https://www.zhihu.com/question/47736379/answer/134776288" target="_blank" rel="external">如何从「裸条」看待这些借贷人的借贷观念？ - 蒋万万的回答 - 知乎</a></p>
<p>关于借贷，我觉得祖辈的话还是很受用的。</p>
<p><strong>1、你惦记别人的利，别人惦记着你的本，到最后，你本利无归，你觉得就这样结束了？别急，一般还有债！</strong><br><strong>2、背叛你的人永远都只会是你的朋友，或者看上去像是你朋友的人。</strong><br><strong>3、人心隔肚皮</strong><br><strong>4、铁打的营盘流水的兵</strong></p>
<p>没有资本的人其实在现实世界上很难有选择的机会，总是很容易被各种诱惑所主宰，这次的网贷事件就可以说是无法避免的。<br><strong>（第一次生意）</strong><br>年轻的大学生（不分男女）总是有消费的欲望，我们暂不管他们去消费什么，这种需求是客观的存在的。我们呢，也不谈她们人性的光辉，善良或是邪恶、知足或是贪婪，只要有这种消费的动力，她们也只能别无选择的接收这种商品（贷款本身就是一种商品），惦记着这家或那家发布的“学生贷”的好处，交上人家要的正当信息资料，才能进入可以借贷的门槛，那么商家也要做这笔生意，权衡利弊以后觉得可以做你这笔生意，人家才可以把钱贷给你吧。双方觉得不错，签个合同画个押，生意就这样做好了。<br><strong>（第二次生意）</strong><br>商家这样的生意做多了，发现我们的客户（大学生没有钱没有具体的收入来源）质量也不是很好，拼死拼活也就赚这么多。不太好呀，怎么办？这样，你们不是还是需要花钱吗？那你可以多交点东西，比方说多提点利息和罚息，这样我们也更能赚的多些。大学生没办法，提就提吧，反正也是可以还完的，只要可以接收就签。双方觉得不错，签个合同画个押，生意就这样做好了。<br><strong>（第三次生意）</strong><br>“我为什么要签这家网贷，还有其他的可以选择，况且已经有一笔债了，先还完好了。”学生觉得后续情况不太乐观，不想签了。情绪一表现出来，商家就有察觉。“先还完也好，我这边有资金压力，嗯嗯，那你早点还好了。”商家也默认客户质量慢慢变得不好，总还是生意要做的，只不过不能给你那么多额度了，你也不再是我最想要的A类客户了。<br><strong>（第四次生意）</strong><br>逾期了 30天、60天、90天，看着利息每天都在长，自己的收入都填补不了这个坑。怎么办？那就不还了。商家不能等着呆账收不回钱啊。怎么办？等着数额慢慢的变大，再叫人去催收！学生一害怕就又只能老老实实的还钱了。学生想：反正商家也不知道我的钱是怎么来的，不如我再去其他的贷款网站借点钱，以后欠的可以慢慢还。然后又开始借款，拆了东墙补西墙，拆了西墙补东墙。合同签的越来越多，才发现商家的玩法都一样，自己的身上又多了不少的逾期账单。怎么办？<br><strong>（第五次生意）</strong></p>
<p>商家A的喽啰，就是之前跟你当朋友的那个人，会主动给你提出一个解决方法来解决这种窘境。<br>“因为你借的少了所以你手里的钱的根本没有办法帮你解决实际的收入问题，你需要大幅度的提额，然后还掉我们的家的款，少了一家两家之后，你就会觉得轻松很多！要不逾期和罚息你这辈子都还不完！”商家A的喽啰说道。学生一听也确实是这个理，那就提提额吧。那具体怎么提呢？“要找口子的，你按照我要求的东西提供下，我帮你去找商家B！”喽啰说道。学生只能接收他提的条件。<br><strong>（第六次生意）</strong></p>
<p>要什么都可以，只要能结束这种情况。<br>So…. ~你懂的！<br><strong>（第七次生意）</strong><br>没办法~忍气吞声<br><strong>（第八次生意）</strong></p>
<p>没办法~如果不还清，同学们会怎么看我？！</p>
<p><strong>（第九次生意）</strong></p>
<p>没办法~信用快要破产了~</p>
<p><strong>（第十次生意）</strong></p>
<p>没办法~有人能好心救救我吗？ （现在人心应该没有那么好吧）</p>
<p><strong>（第十一次生意）</strong></p>
<p>~</p>
<p>现在的生意好谈多了，做主子的感觉就是不一样！公司生意也变得的越来越好。商家不只做放贷还可以做其他的生意。</p>
<p>几次生意过后，这种优势就会变得很明显！<br>但问题是 商业活动本身就是一种追逐胜利的游戏。<br>所以一方一定会想方设法的保持这种优势，这种金钱游戏的玩法最后都是 <strong>以营盘的胜利</strong> 而告终。</p>
<p>你要明白，现在的女大学生都不傻，而是 <strong>被迫的趋利而为</strong> 而已<strong>！</strong></p>
<p>小时候一直都生活在家教森严的爷爷奶奶家。<br>从小就接收着传统观念的影响，有很多话听起来好像登不上大雅之堂，但细细想想理确实还是那个理。<br>小声说句：放贷真的是这个世界上最完美的生意！<a href="javascript:;" target="_blank" rel="external"><span>修改</span></a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;原文来自于我的“知乎问答” &lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.zhihu.com/question/47736379/answer/134776288&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;如何从「裸条」看待这些借贷人的借贷
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>嵊泗的离岛生活</title>
    <link href="http://www.fedjs.com/2016/12/Life-in-Shengsi-Islands/"/>
    <id>http://www.fedjs.com/2016/12/Life-in-Shengsi-Islands/</id>
    <published>2016-12-20T09:32:25.000Z</published>
    <updated>2017-02-16T05:59:51.195Z</updated>
    
    <content type="html"><![CDATA[<p>这是我第一次踏上这个岛屿，你不用知道她的过去，你只要踏上去就能深刻感受她的不同，而我不仅仅是喜欢那的景色，更大的兴趣是她身上的人和事。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这是我第一次踏上这个岛屿，你不用知道她的过去，你只要踏上去就能深刻感受她的不同，而我不仅仅是喜欢那的景色，更大的兴趣是她身上的人和事。&lt;/p&gt;
    
    </summary>
    
      <category term="旅行日志" scheme="http://www.fedjs.com/categories/%E6%97%85%E8%A1%8C%E6%97%A5%E5%BF%97/"/>
    
    
      <category term="游记" scheme="http://www.fedjs.com/tags/%E6%B8%B8%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>离岛随想（一）</title>
    <link href="http://www.fedjs.com/2016/12/islands-capriccio/"/>
    <id>http://www.fedjs.com/2016/12/islands-capriccio/</id>
    <published>2016-12-20T07:59:32.000Z</published>
    <updated>2017-02-16T06:00:06.416Z</updated>
    
    <content type="html"><![CDATA[<p>没什么人明白自由意味着什么，我也只是在看到别人嘴角泛起笑容的时候，能隐约感受到。</p>
<p>本来只是想出来散散心的，所以并没有内心里走的匆忙。</p>
<p>有时候真的想远离城市，去一个没有人打扰的地方好好生活，没有压力和选择，一起都那么平淡。</p>
<p>我憧憬电影《大河恋》里的生活，不是因为我文艺，而是因为我怀旧，我希望能和老友把酒言欢。</p>
<p>但突然我停住了脚步，想了些许事，又开始往前走。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;没什么人明白自由意味着什么，我也只是在看到别人嘴角泛起笑容的时候，能隐约感受到。&lt;/p&gt;
&lt;p&gt;本来只是想出来散散心的，所以并没有内心里走的匆忙。&lt;/p&gt;
&lt;p&gt;有时候真的想远离城市，去一个没有人打扰的地方好好生活，没有压力和选择，一起都那么平淡。&lt;/p&gt;
&lt;p&gt;我憧憬电影
    
    </summary>
    
      <category term="旅行日志" scheme="http://www.fedjs.com/categories/%E6%97%85%E8%A1%8C%E6%97%A5%E5%BF%97/"/>
    
    
      <category term="游记" scheme="http://www.fedjs.com/tags/%E6%B8%B8%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>231个密码溢出</title>
    <link href="http://www.fedjs.com/2016/12/key-231-sites/"/>
    <id>http://www.fedjs.com/2016/12/key-231-sites/</id>
    <published>2016-12-20T04:01:34.000Z</published>
    <updated>2017-02-06T03:49:45.702Z</updated>
    
    <content type="html"><![CDATA[<p>这事是真的！<br>231个全球最大最重要的账户密码，在BC论坛以比特币出价交易的方式出售了！里面有很多秘密资料。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这事是真的！&lt;br&gt;231个全球最大最重要的账户密码，在BC论坛以比特币出价交易的方式出售了！里面有很多秘密资料。&lt;/p&gt;
    
    </summary>
    
      <category term="Project" scheme="http://www.fedjs.com/categories/Project/"/>
    
    
  </entry>
  
</feed>
